<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itstudy.mapper.EmpMapper">

    <!--查询标签<select>, id需要与Mapper接口里的方法名一致,
    resultType为单条记录所对应的全限定名类型即com.itstudy.pojo.Emp, -->
    <sql id="commonSelect">
        select *
        from emp
    </sql>

    <select id="conditionalQuery" resultType="com.itstudy.pojo.Emp">
        <include refid="commonSelect"/>
        <where>
            <if test="name != null">
                name like concat('%', #{name}, '%')
            </if>
            <if test="gender != null">
                and gender = #{gender}
            </if>
            <if test="begin != null and end != null">
                and entrydate between #{begin} and #{end}
            </if>
        </where>
        order by update_time desc
    </select>

    <select id="getById" resultType="com.itstudy.pojo.Emp">
        <include refid="commonSelect"/>
        where id = #{id}
    </select>

    <update id="update">
        update emp
        <set>
            <if test="username != null">
                username = #{username},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="gender != null">
                gender = #{gender},
            </if>
            <if test="image != null">
                image = #{image},
            </if>
            <if test="entrydate != null">
                entrydate = #{entrydate},
            </if>
            <if test="deptId != null">
                dept_id = #{deptId},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime}
            </if>
        </set>
        where id = #{id}
    </update>

    <!--遍历id 对in后面的范围 (1, 2, 3) 进行标签化-->
    <!--
        collection: 遍历的集合名称
        item: 遍历出来的元素名称
        separator: 集合里的分隔符
        open: 遍历开始前拼接的SQL片段
        close: 遍历结束之后拼接的SQL片段
        #{id}: 遍历出来的id
    -->
    <delete id="deleteByIds">
        delete
        from emp
        where id in
        <foreach collection="idList" item="id" separator="," open="(" close=")">
            #{id}
        </foreach>

    </delete>

</mapper>